<project xmlns="http://maven.apache.org/POM/4.0.0"
         xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
         xsi:schemaLocation="http://maven.apache.org/POM/4.0.0
https://maven.apache.org/xsd/maven-4.0.0.xsd">
 
  <modelVersion>4.0.0</modelVersion>
 
  <parent>
<!-- Esto le dice a Maven que herede toda la configuraci칩n de Spring Boot -->
<groupId>org.springframework.boot</groupId>
<artifactId>spring-boot-starter-parent</artifactId>
<version>3.3.4</version>
<relativePath/> <!-- busca autom치ticamente la versi칩n correcta -->
</parent>
 
  <groupId>com.grupo</groupId>
<artifactId>factorial-app</artifactId>
<version>1.0.0</version>
<packaging>jar</packaging>
<name>factorial-app</name>
 
<properties>
  <java.version>17</java.version>

  <!-- SonarCloud integration -->
  <sonar.organization>ivolizmor</sonar.organization>
  <sonar.projectKey>IvoLizMor_factorial_test_mvn</sonar.projectKey>
  <sonar.host.url>https://sonarcloud.io</sonar.host.url>
</properties>
 
    <!-- Soporte para desplegar en servidores Tomcat -->
    <dependency>
        <groupId>org.springframework.boot</groupId>
        <artifactId>spring-boot-starter-tomcat</artifactId>
        <scope>provided</scope>
    </dependency>

           
 <dependency>
  <groupId>com.sparkjava</groupId>
  <artifactId>spark-core</artifactId>
  <version>2.9.4</version>
</dependency>

    <!-- Starter para crear APIs REST -->
<dependency>
<groupId>org.springframework.boot</groupId>
<artifactId>spring-boot-starter-web</artifactId>
</dependency>
 
<!-- Dependencias de test -->
<dependency>
  <groupId>org.springframework.boot</groupId>
  <artifactId>spring-boot-starter-test</artifactId>
  <scope>test</scope>
  <exclusions>
    <exclusion>
      <groupId>org.junit.vintage</groupId>
      <artifactId>junit-vintage-engine</artifactId>
    </exclusion>
  </exclusions>
</dependency>

 
 
<build>
  <!-- Nombre final del archivo WAR -->
  <finalName>factorial-app</finalName>

  <plugins>

    <!-- Plugin oficial de Spring Boot configurado para empaquetar WAR -->
    <plugin>
      <groupId>org.springframework.boot</groupId>
      <artifactId>spring-boot-maven-plugin</artifactId>
      <configuration>
        <layout>WAR</layout> <!-- 游댳 genera WAR en lugar de JAR -->
      </configuration>
    </plugin>

    <!-- Plugin WAR cl치sico de Maven (refuerza compatibilidad Tomcat) -->
    <plugin>
      <groupId>org.apache.maven.plugins</groupId>
      <artifactId>maven-war-plugin</artifactId>
      <version>3.3.2</version>
      <configuration>
        <failOnMissingWebXml>false</failOnMissingWebXml>
      </configuration>
    </plugin>

<plugin>
  <groupId>org.jacoco</groupId>
  <artifactId>jacoco-maven-plugin</artifactId>
  <version>0.8.11</version>
  <executions>
    <execution>
      <goals>
        <goal>prepare-agent</goal>
      </goals>
    </execution>
    <execution>
      <id>report</id>
      <phase>verify</phase>
      <goals>
        <goal>report</goal>
      </goals>
      <configuration>
        <reports>
          <report>xml</report>
        </reports>
      </configuration>
    </execution>
  </executions>
</plugin>


    <!-- Incluir carpetas personalizadas como fuentes -->
    <plugin>
      <groupId>org.codehaus.mojo</groupId>
      <artifactId>build-helper-maven-plugin</artifactId>
      <version>3.4.0</version>
      <executions>
        <execution>
          <id>add-source</id>
          <phase>generate-sources</phase>
          <goals>
            <goal>add-source</goal>
          </goals>
          <configuration>
            <sources>
              <source>${project.basedir}/src</source>
            </sources>
          </configuration>
        </execution>
        <execution>
          <id>add-test-source</id>
          <phase>generate-test-sources</phase>
          <goals>
            <goal>add-test-source</goal>
          </goals>
          <configuration>
            <sources>
              <source>${project.basedir}/Test</source>
            </sources>
          </configuration>
        </execution>
      </executions>
    </plugin>

    <!-- Plugin para ejecutar los tests -->
    <plugin>
      <groupId>org.apache.maven.plugins</groupId>
      <artifactId>maven-surefire-plugin</artifactId>
      <version>3.2.5</version>
      <configuration>
        <includes>
          <include>**/*Test.java</include>
        </includes>
      </configuration>
    </plugin>

    <!-- SonarCloud (opcional) -->
    <plugin>
      <groupId>org.sonarsource.scanner.maven</groupId>
      <artifactId>sonar-maven-plugin</artifactId>
      <version>3.11.0.3922</version>
    </plugin>

  </plugins>
</build>


</project>

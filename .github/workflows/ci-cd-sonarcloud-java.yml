sonar cloud yml:


name: CI/CD Java + SonarCloud + Azure

on:
  push:
    branches: [ "main" ]
  pull_request:
    branches: [ "main" ]
  workflow_dispatch:

permissions:
  contents: read

env:
  AZURE_WEBAPP_NAME: ${{ vars.AZURE_WEBAPP_NAME }}
  JAVA_VERSION: '17'
  SONAR_HOST_URL: 'https://sonarcloud.io'

jobs:
  build_test_and_sonar:
    name: Build, JUnit & SonarCloud
    runs-on: ubuntu-latest
    steps:
      - name: Checkout code
        uses: actions/checkout@v4
        with:
          fetch-depth: 0

      - name: Set up Java
        uses: actions/setup-java@v4
        with:
          distribution: 'temurin'
          java-version: ${{ env.JAVA_VERSION }}
          cache: 'maven'

      - name: Build, Test & Coverage
        run: mvn -B -ntp clean verify jacoco:report

      - name: Verify coverage report exists
        run: ls -lh target/site/jacoco || true

      - name: SonarCloud Analysis
        run: >
          mvn -B -ntp
          org.sonarsource.scanner.maven:sonar-maven-plugin:sonar
          -Dsonar.host.url=${{ env.SONAR_HOST_URL }}
          -Dsonar.projectKey=<IvoLizMor_factorial_test_mvn>
          -Dsonar.organization=<IvoLizMor>
          -Dsonar.coverage.jacoco.xmlReportPaths=target/site/jacoco/jacoco.xml
          -Dsonar.login=${{ secrets.SONAR_TOKEN }}

  deploy:
    name: Deploy to Azure App Service
    needs: build_test_and_sonar
    runs-on: ubuntu-latest
    if: ${{ github.ref == 'refs/heads/main' }}
    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Set up Java
        uses: actions/setup-java@v4
        with:
          distribution: 'temurin'
          java-version: ${{ env.JAVA_VERSION }}
          cache: 'maven'

      - name: Build JAR (skip tests)
        run: mvn -B -ntp -DskipTests package

      - name: Deploy JAR to Azure
        uses: azure/webapps-deploy@v3
        with:
          app-name: ${{ env.AZURE_WEBAPP_NAME }}
          publish-profile: ${{ secrets.AZURE_WEBAPP_PUBLISH_PROFILE }}
          package: target/*.jar
